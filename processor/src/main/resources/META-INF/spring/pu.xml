<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/10.2/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/10.2/events/openspaces-events.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/10.2/remoting/openspaces-remoting.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.gigaspaces.poc.processor" />
    
    <!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

    <!--
        Enables the usage of @GigaSpaceContext annotation based injection.
    -->
    <os-core:giga-space-context/>

    <!--
        Enables using @Polling and @Notify annotations
    -->
    <os-events:annotation-support />

    <!--
        Bean for connecting to mongoDB instance
    -->
    <bean id="mongoClient" class="com.gigaspaces.persistency.MongoClientConnectorBeanFactory">
        <property name="db" value="testDB" />
        <property name="config">
            <bean class="com.mongodb.MongoClient">
                <constructor-arg value="172.31.1.92" type="java.lang.String" />
                <constructor-arg value="27017" type="int" />
            </bean>
        </property>
    </bean>

    <bean id="spaceDataSource" class="com.gigaspaces.persistency.MongoSpaceDataSourceBeanFactory">
        <property name="mongoClientConnector" ref="mongoClient" />
    </bean>
    <!--
        A bean representing a space (an IJSpace implementation).

        Note, we do not specify here the cluster topology of the space. It is declated outside of
        the processing unit or within the SLA bean.

        The space is configured to connect to a mirror, and uses the configured external data source
        to perform the initial load operation from the database when the Space starts up.
    -->
    <os-core:embedded-space id="space" space-name="space" schema="persistent"
                   mirrored="true" space-data-source="spaceDataSource">
        <os-core:properties>
            <props>
                <!-- Use ALL IN CACHE -->
                <prop key="space-config.engine.cache_policy">1</prop>
                <prop key="space-config.external-data-source.usage">read-only</prop>
                <prop key="cluster-config.cache-loader.external-data-source">true</prop>
                <prop key="cluster-config.cache-loader.central-data-source">true</prop>
            </props>
        </os-core:properties>
    </os-core:embedded-space>

    <!--
        Defines a distributed transaction manager.
    -->
     <os-core:distributed-tx-manager id="transactionManager"/>

    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager"/>

    <!--
        The data processor bean
    -->
    <bean id="backendMock" name="backendMock" class="com.gigaspaces.poc.processor.BackendMock"/>
    <bean id="authorizationJourneyProcessor" class="com.gigaspaces.poc.processor.AuthorizationJourneyProcessor"/>
    <bean id="instructionExecutedEventProcessor" class="com.gigaspaces.poc.processor.InstructionExecutedEventProcessor"/>
    <bean id="instructionFulfilledEventProcessor" class="com.gigaspaces.poc.processor.InstructionFulfilledEventProcessor"/>
    <bean id="instructionReleasedEventProcessor" class="com.gigaspaces.poc.processor.InstructionReleasedEventProcessor"/>
    <bean id="moneyTransferInstructionProcessor" class="com.gigaspaces.poc.processor.MoneyTransferInstructionProcessor"/>
    <bean id="moneyTransferJourneyProcessor" class="com.gigaspaces.poc.processor.MoneyTransferJourneyProcessor"/>

    <bean id="authorizationServiceBean" class="com.gigaspaces.poc.common.AuthorizationServiceBean"/>


    <!-- Support the @RemotingService annotation on a service-->
    <!--<os-remoting:annotation-support />-->
    <!--<os-remoting:service-exporter id="serviceExporter" />-->
</beans>